--Create a schema in the postgres database
CREATE SCHEMA hmlr_prices;

--Create a table to load the data into
CREATE TABLE hmlr_prices.prices
(
    uid character varying PRIMARY KEY,
    price integer,
    sale_date date,
    postcode character varying(12),
    type character varying(1),
    new character varying(1),
    duration character varying(1),
    paon character varying,
    saon character varying,
    street text,
    locality text,
    town text,
    district text,
    county text,
    category character varying(1),
	status character varying(1)
);

--Copy the data from the CSV into the table
COPY HMLR.prices FROM 'insert your path here\pp-complete.csv' CSV;

--There is no UPRN or oter unique key for each property
--To compare changes in price for the same property you will need to use a compund key comprising of postcode, poan, soan to create our own uprn

ALTER TABLE hmlr_prices.prices
ADD COLUMN myUPRN bigint;

--There are a number of observations (33,000 in the october 2018 dataset) with no postcode
--There are also a number of observations (3,700 in the october 2018 dataset) that have a postcode but no poan or soan.  
--These will be excluded from our analysis.  To do this i create a view that excludes them and use the view for analysis

CREATE OR REPLACE VIEW hmlr_prices.comparableprices AS
 SELECT 
 	prices.myUPRN,
	prices.uid,
    prices.price,
    prices.sale_date,
    prices.postcode,
    prices.type,
    prices.new,
    prices.duration,
    prices.paon,
    prices.saon,
    prices.street,
    prices.locality,
    prices.town,
    prices.district,
    prices.county,
    prices.category,
    prices.status
   FROM hmlr_prices.prices
  WHERE prices.postcode::text <> ''::text AND (prices.paon::text <> ''::text OR prices.saon::text <> ''::text);

--Get a distinct list of all properties and given them each a unique id (using row_number) that we will use as our own uprn
--Store this in a table called UniqueProperties
select DISTINCT on (postcode, paon, saon, street, locality, town, district, county) ROW_NUMBER() over() AS  myUPRN, postcode, paon, saon, street, locality, town, district, county
INTO hmlr_prices.UniqueProperties
FROM hmlr_prices.ComparablePrices 
  
 --Now update the original prices table with our own UPRN for each of the properties by querying the UnqueProperties table created in the last step
Update hmlr_prices.Prices A 
SET myUPRN = (select myUPRN from hmlr_prices.UniqueProperties WHERE postcode = a.postcode AND paon = a.paon AND saon = a.saon )

--Get the lowest and earliest and latest price for each property and store the result in a table

  
--Create a table joining the earliest price to the latest house price and work out the difference
  
SELECT t1.postcode, t1.paon, t1.saon,  t1.sale_date as earlies_sale_date, t2.sale_date as latest_sale_date, t1.price as Earliest_price, t2.price as latest_price,  (t2.price - t1.price) as price_diff 
INTO hmlr_prices.price_analysis
From hmlr_prices.post_2004 t1
INNER Join hmlr_prices.post_2004 t2
ON t1.postcode = t2.postcode
	AND t1.paon = t2.paon
	AND t1.saon = t2.saon
	order by t1.postcode, t1.paon, t1.saon	;

--Create a schema in the postgres database
CREATE SCHEMA hmlr_prices;

--Create a table to load the data into
CREATE TABLE hmlr_prices.prices
(
    uid character varying PRIMARY KEY,
    price integer,
    sale_date date,
    postcode character varying(12),
    type character varying(1),
    new character varying(1),
    duration character varying(1),
    paon character varying,
    saon character varying,
    street text,
    locality text,
    town text,
    district text,
    county text,
    category character varying(1),
	status character varying(1)
);

--Copy the data from the CSV into the table
COPY HMLR.prices FROM 'insert your path here\pp-complete.csv' CSV;

--There is no UPRN or oter unique key for each property
--To compare changes in price for the same property you will need to use a compund key comprising of postcode, poan, soan

--There are a number of observations (33,000 in the october 2018 dataset) with no postcode
--There are also a number of observations (3,700 in the october 2018 dataset) that have a postcode but no poan or soan.  
--These will be excluded from our analysis

--Create a table with the earliest price for each unique property 
SELECT
  UID, price, sale_date, postcode, paon, saon 
  INTO hmlr_prices.pre_2004
FROM (
  SELECT
    ROW_NUMBER() OVER (PARTITION BY postcode, paon, saon ORDER BY postcode, paon, saon, sale_date) AS r,
    t.*
  FROM
    hmlr_prices.prices t) x
WHERE
  x.r <= 1 and x.postcode <>'' AND (x.paon <> '' OR x.saon <> '');
  
  
--Create a table with the latest price for each unique property 
SELECT
  UID, price, sale_date, postcode, paon, saon 
  INTO hmlr_prices.post_2004
FROM (
  SELECT
    ROW_NUMBER() OVER (PARTITION BY postcode, paon, saon ORDER BY postcode, paon, saon, sale_date DESC) AS r,
    t.*
  FROM
    hmlr_prices.prices t) x
WHERE
  x.r <= 1 and x.postcode <>'' AND (x.paon <> '' OR x.saon <> '');
  
--TO FIX the post and pre tables contain the same value suggesting the partitioning isn't sorting by date
  
--Create a table joining the earliest price to the latest house price and work out the difference
  
SELECT t1.postcode, t1.paon, t1.saon,  t1.sale_date as earlies_sale_date, t2.sale_date as latest_sale_date, t1.price as Earliest_price, t2.price as latest_price,  (t2.price - t1.price) as price_diff 
INTO hmlr_prices.price_analysis
From hmlr_prices.post_2004 t1
INNER Join hmlr_prices.post_2004 t2
ON t1.postcode = t2.postcode
	AND t1.paon = t2.paon
	AND t1.saon = t2.saon
	order by t1.postcode, t1.paon, t1.saon	;
